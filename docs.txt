  
== Products
{          
   name: "Matutor Bis",
   slug: "matutorbis",
   allowedusers: [ "KcJ4i6BiErdRaqjBqa", "kKcJ4i6BiErdRaqjBa"
   ],
   scrummaster: [ Meteor.userId() ],
   productowner: ["a productowner"],
   team: ["KcJ4i6BiErdRaqjBqa", "KcJ4i6BiErdRaqjBqb", "KcJ4i6BiErdRaqjBqc"]

}

Products.insert( { name: "Matutor Bis",
                      slug: "matutorbis",
                      allowedusers: [ "KcJ4i6BiErdRaqjBqa", "kKcJ4i6BiErdRaqjBa"
                      ],
                      scrummaster: [ Meteor.userId() ],
                      productowner: ["a productowner"],
                      team: ["KcJ4i6BiErdRaqjBqa", "KcJ4i6BiErdRaqjBqb", "KcJ4i6BiErdRaqjBqc"] });

DailyScrum.insert( {  name: "Daily Scrum", date:d, dailyscrum:{ yesterday: [ {player: "Matteo", task:"Timer del visualizzatore", pair:["jacopo","davide"]} ], today:[], issues:[] }} );

== What I am Learning 
Products.update( {_id: "Ybhp3fCfcWtDrdryj"} , {$set:{name: 'Zanichelli Matutor Bis'}} );
https://atmosphere.meteor.com/package/crypto-md5
templates: https://wrapbootstrap.com

== ricerca con pi√π di un parametro (and)
Meteor.users.find({
      $and: [
        {_id: {$ne: Meteor.userId()}},
        {username: Session.get('searchedName')}
      ]
    });